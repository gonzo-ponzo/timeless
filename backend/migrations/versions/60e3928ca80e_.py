"""empty message

Revision ID: 60e3928ca80e
Revises: 43a2a2566d9d
Create Date: 2023-12-16 21:49:36.648927

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '60e3928ca80e'
down_revision = '43a2a2566d9d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_services',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('service_id', 'user_id')
    )
    op.drop_constraint('clients_user_id_fkey', 'clients', type_='foreignkey')
    op.create_foreign_key(None, 'clients', 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('comments_user_id_fkey', 'comments', type_='foreignkey')
    op.drop_constraint('comments_client_id_fkey', 'comments', type_='foreignkey')
    op.drop_constraint('comments_record_id_fkey', 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'clients', ['client_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'comments', 'records', ['record_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'comments', 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.alter_column('records', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.drop_constraint('records_client_id_fkey', 'records', type_='foreignkey')
    op.create_foreign_key(None, 'records', 'clients', ['client_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('records_services_record_id_fkey', 'records_services', type_='foreignkey')
    op.drop_constraint('records_services_service_id_fkey', 'records_services', type_='foreignkey')
    op.create_foreign_key(None, 'records_services', 'records', ['record_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'records_services', 'services', ['service_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('records_users_record_id_fkey', 'records_users', type_='foreignkey')
    op.drop_constraint('records_users_user_id_fkey', 'records_users', type_='foreignkey')
    op.create_foreign_key(None, 'records_users', 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'records_users', 'records', ['record_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'records_users', type_='foreignkey')
    op.drop_constraint(None, 'records_users', type_='foreignkey')
    op.create_foreign_key('records_users_user_id_fkey', 'records_users', 'users', ['user_id'], ['id'])
    op.create_foreign_key('records_users_record_id_fkey', 'records_users', 'records', ['record_id'], ['id'])
    op.drop_constraint(None, 'records_services', type_='foreignkey')
    op.drop_constraint(None, 'records_services', type_='foreignkey')
    op.create_foreign_key('records_services_service_id_fkey', 'records_services', 'services', ['service_id'], ['id'])
    op.create_foreign_key('records_services_record_id_fkey', 'records_services', 'records', ['record_id'], ['id'])
    op.drop_constraint(None, 'records', type_='foreignkey')
    op.create_foreign_key('records_client_id_fkey', 'records', 'clients', ['client_id'], ['id'])
    op.alter_column('records', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key('comments_record_id_fkey', 'comments', 'records', ['record_id'], ['id'])
    op.create_foreign_key('comments_client_id_fkey', 'comments', 'clients', ['client_id'], ['id'])
    op.create_foreign_key('comments_user_id_fkey', 'comments', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'clients', type_='foreignkey')
    op.create_foreign_key('clients_user_id_fkey', 'clients', 'users', ['user_id'], ['id'])
    op.drop_table('user_services')
    # ### end Alembic commands ###
